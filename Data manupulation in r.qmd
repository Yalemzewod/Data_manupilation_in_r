---
title: "Data Manupulation in R"
toc: true
toc-depth: 2
number-sections: false
highlight-style: github
format:
  html:
    self-contained: true
    code-fold: true
    code-summary: "Show the code"
    code-tools: true
    theme: united 
knitr: 
 opts_knit: 
   warning: false
   message: false
editor: visual
---

# Data management in R

In this section we will discuss about data management process, basic data cleaning and management in R. For detail notes use the [MAP training material](https://malaria-atlas-project.gitlab.io/intro-to-spatial-analysis-for-infectious-diseases/02_datahandling.html) training material. For demonstration, we will use the routine malaria surveillance data extracted from DHIS2.

## Outline

-   Reading data into R

-   Explore data

-   Data manipulation

Data can be defined as a collection of facts that can be used to draw a conclusion, make predictions and assist decision making.

Public health data may originate from various sources including:

\- Routine disease surveillance system - DHIS2

\- Research and surveys - DHS, MIS, SPA

\- Administrative - logistic data

\- Vital statistics - birth, death

\- Literature and reports

## Reading data

This section will focus on how to read data in R. R has the functionality to import various types of data. One of the most common file types we work with are \`.csv\` files, but we can also import \`.dta\` files and \`.xlsx\` files among others.

We can **import .csv** files into RStudio using the base function `read.csv().` In this function we insert the file path to the data we wish to import. Note that as we have set up a project, this is our base directory so file paths stem from where the project is saved. We can assign the imported dataset to an object, here called `routine_data`, using the `<-` operator to store it in our environment.

For this training we are using a dataset called **routine_data** This is a dataset of malaria routine case extracted from *DHIS2* and contains variables for the numbers of malaria tests performed and the numbers of confirmed cases stratified by age and sex. Data are reported by districts for children under the age of 5 , 5 - 14 and over the age of 5 separately.

For data management, we will use the `tidyverse`package using *install.packages()* function.

```{r echo=FALSE, eval=FALSE}
install.packages("tidyverse", repos = "http://cran.us.r-project.org") 
```

Check all the required package

```{r}
#| code-fold: true
library(tidyverse) #data management 
library(hablar) #convert variable type
library(janitor)#clean names
library(haven) #to read and save '.dta' files
library(lubridate)# For date
```

```{r eval=FALSE}
#remove(list=ls()) # clear your directory 
my.dir <- paste(getwd(),"/",sep="")
routine_data <-read.csv("C:/Users/user/Documents/Part 2/routine_data.csv") |> 
    clean_names() 
```

Other data types can easily be read into R using different packages available. `.xlsx` files can easily read into R using the `read_excel()` function from the **readxl** package. Stata files (.dta) can be read in using the `read_dta()` function from the `Haven` package or `read.dta()` function from the `foreign` package. Both `Haven and readxl` are parts of the tidyverse package however we need to install the `foreign` package separately.

```{r eval=FALSE}
# Examples, not run
library(readxl) 
xlsx_data <- read_xls("data",sheet = "sheet1", col_names = TRUE, na = "NA")

library(haven)
stata_data <- read_dta("stata_file.dta")
spss_data <- read_sav("spss_data.sav")
```

Whilst `read.csv()` is the most common way to read data into R, there is the alternative \`read_csv()\` function (note the underscore). This is part of the \`tidyverse\` group of packages and is often a better option for reading in CSV files. This function is quicker, it reads the data in as a tibble instead of a data frame and allows for non standard variable namesm amongst other benefits.

```{r}
routine_data <- read_csv("C:/Users/user/Documents/Part 2/routine_data.csv")
```

There are various options we can use when importing data, such as whether to include headers, what character to use for decimal points, what to import as missing values. To explore these options you can look at the help pages e.g. `?read_csv`.

### Explore the data

Knowing your dataset well from file size to data types is another crucial step prior to hands-on data cleaning.

To look at how the data looks like either by clicking on it in the global environment window or by typing the command `View(routine_data)` which opens up a window displaying the data. Alternatively, we may just want to look at a few rows. We can do this by using the `head()` function, which shows us the first n rows of data.

To view the top five rows of the_data frame:

```{r}
View(routine_data)
head(routine_data, 20)
tail(routine_data, 10)
```

To understand the structure of the data we can use the `str()` command or `glimpse.`

```{r}
str(routine_data)
```

```{r}
glimpse(routine_data)
```

From the output, we can also see that the data frame consists of 11604 observations (rows) and 16 variables (columns). Each variable's name and data type is also listed. The dataset can be read as data.frame, lists, tbl_df, spatial, etc. To see the class of the the dataset we can use the code:

```{r}
class(routine_data)
```

For a dataframe we can select the nth row, or the nth column using square brackets (note where the comma is paced).

```{r}
head(routine_data[,2], 5) #second column
```

```{r}
routine_data[1,] #firts row
```

To view all variable names with the `names()`, `colnames()` , and `variable.names()` function.

```{r}
colnames(routine_data)
names(routine_data)
variable.names(routine_data)
```

To view variable with the position number:

```{r}
names(routine_data)[5]
```

These can be determined by either the`str()or glimpse()` function or the more explicit function. There are several incorrect data types in this dataset, but let's continue using the "date" variable to demonstrate how to identify and update these errors:

```{r}
typeof(routine_data$date)
```

"Character" is returned but the variable should in fact be a date. We can use the `as.Date` function of *lubridate* package to change the data type accordingly:

```{r echo=FALSE, eval=FALSE}
library(lubridate)
as.Date(routine_data$date)
```

String inconsistencies: This includes typos, capitalization errors, misplaced punctuation, or similar character data errors that might interfere with data analysis. Take for instance our "year" column.

```{r}
unique(routine_data$Year)
```

Outliers**:** our dataset has 8 continuous variables: *test_performed*, *confirmed_all, confirmed_u5, confirmed_5\_14, confirmed_15, population, pop_5, pop_514, pop_15*. To get a feeling for how the data is distributed, we can plot histograms for case variables:

```{r}
hist(routine_data$confirmed_u5)
hist(routine_data$confirmed_all)
hist(routine_data$confirmed_5_14)
hist(routine_data$confirmed_15)
```

Data cleaning is one of the most important steps for analysis! No matter where your data comes from, always be sure the completeness, consistency, and trustworthiness of data before analyzing and utilizing the data. Once you get cleaned and organized, you can perform analysis to find clear and objective answers to any data question.

::: callout-important
Task 1:

-   Import the `am_data.csa` file using the `read_csv()` function and call the object "my_data"

-   Explore the data structure

-   inspect the top and tail data rows

-   check the name and lists of variables

-   check the data types of Month, Year and date variables
:::

## Data manipulation in Tidyverse

In this section we introduce you to the `tidyverse` packages and show how these functions can be used to explore, manipulate and analyse data. We have already loaded this package with the command `library(tidyverse).`

Tidyverse is a collection of R packages for data science, designed to make cleaning and analyses of data easy and tidy. It uses a range of packages and functions, along with the pipe operator, `%>%`, for version 4.1 and greater `|>`to produce easily readable and reproducible code.

We will start by looking at the basic data manupulation.

Let's start to manipulate our clean data using the functions from the tidyverse.We will cover the following simple, commonly used functions in tidyverse:

-   select

-   filter

-   rename

-   mutate

-   group_by

-   summarise

-   pipes

We will continue this investigation using the clean data `routine_data.csv` dataset we imported into R in the previous section

#### Select

Firstly, we can use `select()` to select columns from the data frame. The first argument is the name of the data frame, followed by the columns you wish to keep. Here we will just select the test performed, confirmed numbers of malaria cases, along with the location and date information.

```{r}
data2 <- select(routine_data,region,zone,district, 
       Month,date,confirmed_all,test_performed)
```

#### Filter

Next, we can filter the data to only include rows which meet a certain specification. To do this we use the `filter()` function. The first argument is the data frame we wish to filter, followed by the argument that we want to filter by. In the first command we select the rows for West region In the second command we select all rows which reported more than 500 confirmed children under 5 for malaria.

```{r}
filter(routine_data, 

       region == "SNNP") 

filter(routine_data, 

       confirmed_u5 >500)

filter(routine_data, 

       (region == "Amhara" | region == "Afar") &

       confirmed_u5 >=500)
```

We may want to use the `filter` function to identify erroneous data in our dataset, for example, we can identify situations where the number of people confirmed with malaria is higher than the number tested.

```{r}
filter(routine_data,

       confirmed_all>test_performed)
```

#### Rename

There may be situations when we want to rename variables in a data frame to make it more comprehensive and easier to process. This can easily be done using the function `rename()`. We pass to this function the data frame we are working with, the new name we want the variable to take and the existing name of the variable. So if we wanted to change the variable "confirmed_u5" to "positive_u5", and to overwrite the object "routine_data" with this we would simply write:

```{r}
?rename
rename(routine_data, 

       conf_u5 =confirmed_u5)
```

#### Mutate

Next, we can add new variables to the dataset or change existing variables using `mutate()`. Mutate allows us to assign new variables using the `=` sign. For example, if we wanted to create a variable of the incidence rate of malaria in under five children per 1000 under five population we could write:

```{r}
mutate(routine_data,

       incidence_rate = (confirmed_u5/pop_5)*1000)
```

We can also use `mutate()` to alter existing variables within the data frame. Say we noticed that there was an error in the region name where in some instance "South Western Ethiopia" was entered as "Sou" we can change this by by combining the `mutate()` function with an \`ifelse\` statement. The first command of the `ifelse()` statement is the condition which has to be met, here `region == "Sou"`; the second command is what you wish to replace the variable with if this condition is met; the third part is what the variable should be else this condition is not met.

```{r eval=FALSE, echo=FALSE}
table(routine_data$region)

mutate(routine_data,

       region = ifelse(region == "Sou", "South Western Ethiopia", region)) 
```

Similarly, we can use `case_when` instead of `ifelse` when replacing parts of a variable. This is particularly useful if making multiple changes. As there were other errors in the district variables we can correct these at the same time using the following code. There is a district name mismatch between district names in **DHIS2** and names in **shapefile**. For this we will use the `task_data.csv`

```{r}
task_data <- read_csv("~/Part 2/task_data.csv") |> 
  data.frame() |> 
 mutate(district_new = case_when(
 district == "Addis Ketema" ~ "Addis Ketema (AA)",
 district == "Nifas Silk Lafto" ~ "Nefas Silk",
 district == "Adaar" ~ "Adar", 
 district == "Ayssaita" ~ "Asayita",
 district == "Aysita City Admin" ~ "Asayita town",
 district == "Dubti City Admin" ~ "Dubti town" ,
 district == "Semera Logia Kentiba" ~ "Samera Logiya town",
 district == "Aba'ala City Admin" ~ "Abaala town",
 district == "Abala" ~ "Abaala",
 district == "Berahle" ~ "Berahile",
 district == "Erabti" ~ "Erebti",
 district == "Koneba" ~ "Kunneba",
 district == "Magale" ~ "Megale", 
 district == "Mille" ~ "Mile",
 district == "Awash Fenteale" ~ "Awash",
 district == "Awash Town" ~ "Awash town", 
 district == "Galalo" ~ "Gelalu", 
 district == "Ewa" ~ "Euwa",
 district == "Yallo" ~ "Yalo",
 district == "Awura" ~ "Awra (AF)",
 district == "Awash Fenteale" ~ "Awash",
 district == "Dalifaghe" ~ "Dalefage",
 district == "Dewe" ~ "Dawe",
 district == "Hadeleala" ~ "Hadelela",
  district == "Semirobi" ~ "Samurobi",
  district == "Telalak" ~ "Telalek",
  district == "Ayehu Guagusa" ~ "Ayehu Guwagusa",
  district == "Chagni Town" ~ "Chagni town",
  district == "Guagusa Shikuda" ~ "Guagusa Shikudad",
  district == "Dangila Town" ~ "Dangila town",  
  district == "Fagitalekoma" ~ "Fagta Lakoma", 
  district == "Injibara Town" ~ "Injibara town",
  district == "Nebaru Chilga" ~ "Chilga 1",
  district == "Chilga" ~ "Chilga 2",
  district == "Adagn Ager Chako" ~ "Adagn Ager Chaqo",
  district == "Gondar Zuriya" ~ "Gonder Zuria",
  district == "Gondar Town Woreda" ~ "Gonder town",
  district == "Kinfaze Begela" ~ "Kinfaz",
  district == "Tegede" ~ "Tsegede (AM)",
  district == "Wogera" ~ "Wegera", 
  district == "Bahirdar Town Woreda" ~ "Bahir Dar town",
  district == "Debay Tilatgin" ~ "Debay Telatgen",
  district == "Debre Markos" ~ "Debre Markos town",
  district == "Enarge Enawga" ~ "Enarj Enawga",
  district == "Enebse Sar Midir" ~ "Enebse Sarmder", 
  district == "Goncha" ~ "Goncha Siso Enebse",
  district == "Hulet Eju Nese" ~ "Hulet Ej Enese",
  district == "Motta" ~  "Mota Town",
  district == "Sinan" ~"Senan",
  district == "Adi Arkay" ~ "Addi Arekay",
  district == "Debark Town" ~ "Debark town", 
  district == "Debark Zuria" ~ "Debark", 
  district == "Angolala Tera" ~ "Angolelana Tera", 
  district == "Antsokia Gemza" ~ "Antsokiya",
  district == "Asagirt" ~ "Assagirt",
  district == "Basona Werana" ~ "Basona Worena",
  district == "Debere Birhan Town" ~ "Debre Berhan town",
  district == "Efratana Gidim" ~ "Eferatana Gidem",
  district == "Gishe" ~ "Gishe Rabel",
  district == "Menz Gera Midir" ~ "Menze Gera Midir",
  district == "Menz Keya Gebreal" ~ "Menze Keya Gabriel",
  district == "Menz Lalo Midir" ~ "Menze Lalo Midir",
  district == "Menz Mama Midir" ~ "Menze Mama Midir",
  district == "Saya Deberna Wayu" ~ "Siya Debirna Wayu",
  district == "Mena meketewa" ~ "Mena Meketewa",
  district == "Shewarobit" ~ "Shoa Robit",
  district == "Taremaber"~ "Tarema Ber",
  district == "Bugina" ~ "Bugna", 
  district == "Kobo Town" ~ "Kobo town",
  district == "Lalibela Town" ~ "Lalibela town",
  district == "Mekete" ~ "Meket",
  district == "Wadila"~"Wadla",
  district == "Woldia Town" ~ "Woldiya town", 
  district == "Bati Woreda" ~ "Bati",
  district == "Dawa Chefa" ~ "Dewa Cheffa", 
  district == "Dawa Harewa" ~ "Dewa Harewa",
  district == "Kemissie Town" ~ "Kemisie town",
  district == "Andabet" ~ "West Esite",
  district == "Mojana Wodera" ~ "Mojan Wedera",
  district == "Debretabor Town" ~ "Debre Tabor town",
  district == "Dera" ~ "Dera (AM)",
  district == "Estie" ~ "East Esite",
  district == "Guna begemider" ~ "Guna Begemider",
  district == "Sedie Muja"~"Sede Muja",
  district == "Woreta" ~ "Woreta town",
  district == "Borena" ~ "Borena /Debresina",
  district == "Dessie Zuriya" ~ "Dessie Zuria",
  district == "kallu" ~ "Kalu", 
  district == "Kombolcha Town" ~ "Kombolcha town",
  district == "Legahida" ~ "Legehida",
  district == "Dessie Town Woreda" ~ "Dessie town",
  district == "Mehal Saint" ~ "Mehal Sayint",
  district == "Tehulederie" ~ "Thehulederie",
  district == "Werebabo" ~ "Worebabu", 
  district == "Wereilu" ~ "Were Ilu",
  district == "Wogidi" ~ "Wegde",
  district == "Minjarina Shenkora" ~ "Minjar Shenkora",
  district == "Abergele" ~ "Abergele (AM)",
  district == "Gazgibla" ~ "Gaz Gibla",
  district == "Sehala" ~ "Sahila", 
  district == "Sekota Town" ~ "Sekota town",
  district == "Burie town" ~ "Bure town",
  district == "Bure Zuria" ~ "Bure (AM)",
  district == "Finote Selam Town"~ "Finote Selam town",
  district == "Wenberma" ~ "Wemberma", 
  district == "Gendawuha" ~ "Gendawuha town",
  district == "Dangla Town" ~ "Dangila town",
  district == "Dangla Zuria" ~ "Dangila",
  district == "Asosa Town 1" ~ "Undulu", 
  district == "Oda Bilidigilu" ~ "Bilidigilu",
  district == "Dambie" ~ "Dembi", 
  # district == "Kamash town" ~ "Kamashi",
  district == "Mizhiga" ~ "Mizyiga",
  district == "Zaye" ~ "Zayi",
  district == "Dangur" ~ "Dangura", 
  district == "Dibate" ~ "Debati", 
  district == "Wembera" ~ "Wenbera",
  district == "Mao Komo Special" ~ "Maokomo Special",
  district == "SherKole" ~ "Sherkole",
  district == "Agalo Meti" ~ "Dembi", 
  district == "Yaso" ~ "Zayi",
  district == "Belo Jeganfoy" ~ "Mizyiga",
  district == "Dire Dawa Operational" ~ "Dire Dawa",
 district == "Addis Ketema Operational" ~ "Addis Ketema (DD)",
 district == "Biyoawale Operational" ~ "Biyoawale",
 district == "Gende Kore Operational" ~ "Gende Kore",
 district == "Jeldessa Operational" ~ "Jeldessa",
 district == "Legehare Operational" ~ "Legehare", 
 district == "Melkajebdu Operational" ~ "Malka Jabti /M.Jebdu)",
 district == "Wahil Operational" ~ "Wahil",
 district == "Dimma" ~ "Dima (GM)",
 district == "Gambella Zuria" ~ "Gambela Zuria",
 district == "Jor" ~ "Jore",
 district == "Gambella Town" ~ "Gambela town",
 district == "Itang Special" ~ "Itang",
 district == "Mengeshi" ~ "Mengesh",
 district == "Wanthoa" ~ "Wantawo",
 district == "Erer" ~ "Erer (HR)",
 district == "Ambo Town" ~ "Ambo town",
 district == "Ada Berga" ~ "Adda Berga",
 district == "Asalla town" ~ "Asela town",
 district == "Bokeji Town" ~ "Bekoji town",
 district == "Deksis" ~ "Diksis",
 district == "Digeluna Tijo" ~ "Degeluna Tijo",
 district == "Abe Dengoro" ~ "Abe Dongoro",
 district == "Enkelo Wabe" ~ "Inkolo Wabe", 
 district == "Limuna Bilbilo" ~ "Limu Bilbilo",
 district == "Abichu Gna" ~ "Abichugna Gnea",
 district == "Lode Hetosa" ~ "Lude Hitosa",
 district == "Munesa" ~ "Munessa",
 district == "Dello menna" ~ "Mena (Bale)",
 district == "Goba Town" ~ "Goba town",
 district == "Goba" ~ "Goba (OR)",
 district == "Goro" ~ "Goro (Bale)",
 district == "Goro Dola" ~ "Gora Dola",
 district == "Guradhamole" ~ "Gura Damole",
 district == "Harena Bulluk" ~ "Harena Buluk",
 district == "Dukem Special" ~ "Dukem",
 district == "Medawelabu" ~ "Meda Welabu",
 district == "Das" ~ "Dhas",
 district == "Dubluki" ~ "Dubluk",
 district == "Elwaye" ~ "Elwaya",
 district == "Moyale (OR)" ~ "Moyale (OR)",
 district == "Taltale" ~ "Teltale", 
 district == "Adama Special" ~ "Adama town",
 district == "Yabelo Town" ~ "Yabelo town",
 district == "Bedele Town" ~ "Bedele town",
 district == "Bedele" ~ "Badele Zuria",
 district == "Chora" ~ "Chora (Buno Bedele)",
 district == "Chewaka" ~ "Chwaka",
 district == "Fitche Town" ~ "Fiche town",
 district == "Dawe kachen" ~ "Dawe Ketchen",
 district == "Ginnir Town" ~ "Ginir town",
 district == "Ginnr" ~ "Ginir",
 district == "Gololcha" ~ "Golocha",
 district == "Gololcha (EB)" ~ "Gololcha Bale",
 district == "Laga Hidha" ~ "Lege Hida",
 district == "Gawo kebe" ~ "Gawo Kebe",
 district == "Sewena" ~ "Seweyna",
 district == "Aweday Town" ~ "Aweday town",
 district == "Babile Town" ~ "Babile town",
 district == "Babile" ~ "Babile (OR)",
 district == "Deder Town" ~ "Deder town",
 district == "Agaro Town" ~ "Agaro town",
 district == "Gursum" ~ "Gursum (OR)",
 district == "Haromaya Town" ~ "Haromaya town",
 district == "Haromaya" ~ "Haro Maya",
 district == "Jarso (EH)" ~ "Jarso (East Hararghe)",
 district == "Jarso" ~ "Jarso (West Wellega)",
 district == "Kersa" ~ "Kersa (East Hararge)",
 district == "Haro walabu" ~ "Haro Walabu", 
 district == "Mendi Twon" ~ "Mendi town",
 district == "Kurfa Chale" ~ "Kurfa Chele",
 district == "Melkabello" ~ "Melka Balo",
 district == "Meye Muluke" ~ "Meyu Muleke",
 district == "Midaga Tola" ~ "Midhaga Tola",
 district == "Bishoft Town" ~ "Bishoftu town",
 district == "Bora" ~ "Bora (OR)",
 district == "Billo Nopha" ~ "Bilo Nopha",
 district == "Liben (EH)" ~ "Liben Chukala",
 district == "Liben (Guji)" ~ "Liben",
 district == "Lume" ~ "Lome (OR)",
 district == "Metehara Town" ~ "Metehara town",
 district == "Boneya Bushe" ~ "Boneya Boshe",
 district == "Ebantu"~ "Ibantu",
 district == "Bule Hora Town" ~ "Bule Hora town",
 district == "Jima Arjo" ~ "Jimma Arjo",
 district == "Kiramu" ~ "Kiremu",
 district == "Limu" ~ "Limu (OR)",
 district == "Gudeya Bila" ~ "Bila Seyo",
district == "Meta Welkite" ~ "Meta Walkite",
district == "Leqa Dulecha" ~ "Leka Dulecha",
district == "Arsi Negele Rural" ~ "Arsi Negele",
district == "Arsi Negele Town" ~ "Arsi Negele town",
district == "Nekemte Town" ~ "Nekemte town",
district == "Wayu Tuqa" ~ "Wayu Tuka",
district == "Berek" ~ "Bereh",
district == "Sebeta Town" ~ "Sebeta town",
district == "Senadafa" ~ "Sendafa town",
district == "Holota Town" ~ "Holeta town",
district == "Lega Tafo Lega Dadhi Town" ~ "Lege Tafo-Lege Dadi town",
district == "Sululta Town" ~ "Sululta town",
district == "Aga wayyu" ~ "Aga Wayu",
district == "Anna Sorra" ~ "Ana Sora",
district == "Girja" ~ "Girja /Harenfema",
district == "Gumi Eldalo" ~ "Gumi Idalo",
district == "Wadara" ~ "Wadera",
district == "Woliso Town" ~ "Woliso town",
district == "Horo Bulluq" ~ "Horo Buluk",
district == "shambu" ~ "Shambu town",
district == "Becho" ~ "Becho (Ilu Aba Bora)",
district == "Bure" ~ "Bure (OR)",
district == "Doranii" ~ "Dorani",
district == "Halu" ~ "Halu /Huka",
district == "Hurrumuu" ~ "Hurumu",
district == "Yayo" ~ "Yayu",
district == "Jimma Special" ~ "Jimma town",
district == "Gomma" ~ "Goma",
district == "Kersa (Jimma)" ~ "Kersa (Jimma)",
district == "Mana" ~ "Mena (Jimma)",
district == "Sokoru" ~  "Sekoru",
district == "Shabe Sombo" ~ "Shebe Sambo",
district == "Were Jarso" ~ "Wara Jarso",
district == "Hawa Gelan" ~ "Hawa Galan",
district == "Gelan Town Special" ~ "Gelana (Finfine)",
district == "Gola Oda" ~ "Golo Oda",
district == "Saden Chanka" ~ "Sedi Chenka",
district == "Yemalogi Welel" ~ "Yama Logi Welel",
district == "Ginnir" ~ "Ginir",
district == "Derra" ~ "Dera (OR)",
district == "Girar Jarso" ~ "Gerar Jarso",
district == "Chomen Guduru" ~ "Choman Guduru",
district == "Were Jarso" ~" Wara Jarso",
district == "Amaya" ~ "Ameya",
district == "Becho (SW)" ~ "Becho (SW Shewa)",
district == "Goro (SW)" ~ "Goro (SW Shewa)",
district == "Kersana Mamila" ~ "Kersana Malima",
district == "Saden Sodo" ~ "Seden Sodo",
district == "Sodo Dacha" ~ "Sodo Daci",
district == "Wonchi" ~ "Wenchi",
district == "Dodola Rural" ~ "Dodola",
district == "Dodola Town" ~ "Dodola town",
district == "Sele Nono" ~ "Sale Nono",
district == "Seyo" ~ "Sayo",
district == "Seyo Nole" ~ "Sayo Nole",
district == "Gedeb Hasasa" ~ "Gedeb Asasa",
district == "Heben Arsi" ~ "Heban Arsi",
district == "Qore" ~ "Kore",
district == "Nansebo" ~ "Nenesebo",
district == "Shashemene Town" ~ "Shashemene town",
district == "Gelana" ~ "Gelana (West Guji)",
district == "Suro Barguda" ~ "Suro Berguda",
district == "Burka Dhintu" ~ "Burqua Dhintu",
district == "Chiro" ~ "Chiro town",
district == "Chiro Zurya" ~ "Chiro Zuria",
district == "Guba Qoricha" ~ "Goba Koricha",
district == "Gumbi Bordode" ~ "Gumbi Bordede",
district == "Oda Bultum" ~ "Kuni /Oda Bultum",
district == "Metu Town" ~ "Metu town",
district == "Metu Zuriya" ~ "Metu Zuria",
district == "Tulo"	~ "Tulo (OR)",
district == "Abuna Gindeberet" ~ "Abuna Ginde Beret",
district == "Gindebert" ~ "Ginde Beret",
district == "Ambo Town" ~ "Ambo town",
district == "Ambo" ~ "Ambo Zuria",
district == "Bako Tibe" ~ "Bako Tibe",
district == "Chelia" ~ "Cheliya",
district == "Chobi" ~ "Cobi",
district == "Shakiso Town" ~ "Shakiso town",
district == "Ejere" ~ "Ejere /Addis Alem",
district == "Elfata" ~ "Ifata",
district == "Ilu Galane" ~ "Illu Galan",
district == "Mida kegni" ~ "Mida Kegn",
district == "Nonoo" ~ "Nono",
district == "Babo Gembel" ~ "Babo",
district == "Boji Choqorsa" ~ "Boji Chekorsa",
district == "Ganji" ~ "Gaji",
district == "Negele Town" ~ "Negele town",
district == "Gimbi Rural" ~ "Gimbi",
district == "Qondala" ~ "Gudetu Kondole",
district == "Jarso" ~ "Jarso (West Wellega)",
district == "Nedjo Town" ~ "Nejo town",
district == "Mene Sibu" ~ "Mana Sibu",
district == "Nedjo Rural" ~ "Nejo",
district == "Gimbi Town" ~ "Gimbi town",
district == "Gindeberet" ~ "Ginde Beret",
district == "Areka Town Administration" ~ "Areka town",
district == "Bishan Guracha Town" ~ "Bishan Guracha",
district == "Hababo Guduru" ~ "Ababo",
district == "Ale Special" ~ "Alle Special",
district == "Arbaminch Town Administration" ~ "Arba Minch town",
district == "Arbaminch Zuria" ~ "Arba Minch Zuria",
district == "Chencha Town Adminstration" ~ "Chencha",
district == "Kogota" ~ "Ezo /Kogota",
district == "Garda Martha" ~ "Garda Marta",
district == "Chencha Zuria" ~ "Chencha Zuriya",
district == "Kemba Town Administration" ~ "Kemba town",
district == "Kutcha Alpha" ~ "Kucha Alpha",
district == "Selamber Town Administration" ~ "Selamber town",
district == "Demboya" ~ "Damboya",
district == "Chelekleketu Town Administration" ~ "Chelelektu town",
district == "Chorso" ~ "Churso",
district == "Dilla Town Administration" ~ "Dila town",
district == "Dilla Zuria" ~ "Dila Zuria",
district == "Gedeb Town Woreda Administr" ~ "Gedeb town",
district == "Kochore" ~ "Kochere",
district == "Yirgachefe Town Administration" ~ "Yirgachefe town",
district == "Geze Gofa" ~ "Gezei Gofa",
district ==	"Sawla Town Administration" ~ "Sawla town",
district == "Uba Debretsehay" ~ "Uba Debre Tsehay",
district == "Zalla" ~ "Zala",
district == "Gerese Zuria" ~ "Gerese",
district == "Goba (SP)" ~ "Goba (SP)",
district == "Abeshge" ~ "Abeshege",
district == "Enor Enner" ~ "Enor Ener",
district == "Gimbichau Town" ~ "Gimbichu town",
district == "Karat Town Administration" ~ "Karat town",
district == "Hadero Tunto Zuriya" ~ "Hadero Tunto",
district == "Hosaena Town Administration" ~ "Hosaena town",
district == "Jajura Town" ~ "Jajura town",
district == "Kemba Town" ~ "Kemba town",
district == "Buee Town Administration" ~ "Bui town",
district == "Butajira Town Administration" ~ "Butajira town",
district == "Emdibir Town Administration" ~ "Emdebir town",
district == "Enidguagn" ~ "Endiguagn",
district == "Enemor Ena Enen" ~ "Enemor Ener",
district == "Milhurna Aklil" ~ "Muhur Na Aklil",
district == "Wolkite Town Administration" ~ "Welkite town",
district == "Ann Lemo"~ "Analemmo",
district == "Lemo" ~ "Lemmo",
district == "Shone Town Administration" ~ "Shone Town",
district == "Shashago" ~ "Shashogo",
district == "Siraro Badewacho" ~ "Siraro Badawacho",
district == "Atotii Ulo" ~ "Atote Ulo",
district == "Halaba Kulito Town Administration" ~ "Kulito town",
district == "Weeraa" ~ "Wera",
district == "Weeraa Dijjoo" ~ "Wera Djo",
district == "Doyo Gena" ~ "Doyogena",
district == "Durame Town Administration" ~ "Durame town",
district == "Hadero Town Administration" ~ "Hadero town",
district == "Kacha Birra" ~ "Kacha Bira",
district == "Kedida Gamela" ~ "Kediada Gambela",
district == "Shinshicho Town Administration" ~ "Shinshincho town",
district == "Alicho Wiriro" ~ "Alicho Woriro",
district == "Hulbarag" ~ "Hulbareg",
district == "Konta Special" ~ "Konta",
district == "Kibet Town Administration" ~ "Kibet town",
district == "Lanfuro" ~ "Lanfero",
district == "Bulki Town Administration" ~ "Gezei Gofa",
district == "Mitto" ~ "Mito",
district == "Tora Town" ~ "Tora town",
district == "Worabe Town Administration" ~ "Worabe town",
district == "Baka Dawula" ~ "Boko Dawula",
district == "Dasenech" ~ "Dasenech /Kuraz",
district == "Jinka Town Administration" ~ "Jinka town",
district == "Ngangatom" ~ "Nyngatom",
district == "Woba Ari" ~ "Wub Ari", 
district == "Abala Abaya" ~ "Abela Abaya",
district == "Areka Town"~ "Areka town",
district == "Bayira Koysha" ~ "Bayera Koisha",
district == "Bodit Town Administration" ~ "Boditi town",
district == "Boloso Sore"  ~ "Boloso Sore", 
district == "Bolosso Bombe" ~ "Boloso Bombe",
district == "Damot Pulassa" ~ "Damot Pullasa",
district == "Damot Woyide" ~ "Damot Woide",
district == "Gesuba Town Administration" ~ "Gesuba town",
district == "Gununo Hamus Town Administr" ~ "Gununo Hamus town",
district == "Afdam" ~ "Afdem",
district == "Hobicha" ~ "Hobicha Abaya",
district == "Kawo Koysha" ~ "Kawo Koisha",
district == "Kindo Didaye" ~ "Kindo Daddaye",
district == "Kindo Koyisha"~ "Kindo Koyesha",
district == "Offa" ~ "Ofa",
district == "Abaqaraw" ~ "Aba-Korow",
district == "Sodo Zuriya"~"Sodo Zuria",
district == "Sodo Town Administration" ~"Sodo Town",
district == "Tebela Town Administration" ~ "Tebela town",
district == "Yem Special" ~"Yem SP Woreda",
district == "Gide Bench" ~ "Gidi Bench",
district == "Guraferda" ~ "Gurafereda",
district == "Mizan Aman Town Administration" ~ "Mizan Aman town",
district == "Shebench" ~ "Shay Bench",
district == "Siz Town Administration" ~ "Size town",
district == "Issara" ~ "Isara",
district == "Kechi"~ "Kache",
district == "Mari mansa" ~ "Mari Mansa",
district == "Tercha Town Administration" ~ "Tercha town",
district == "Tercha Zuria" ~ "Tercha Zuriya",
district == "Zaba" ~ "Zabagazo",
district == "Adiyo" ~ "Adiyio",
district == "Bonga Town Administration" ~ "Bonga town",
district == "Gesha" ~ "Gesha",
district == "Burji  Special" ~ "Burji Special",
district == "Shishoende" ~ "Shisho Ande",
district == "Tello" ~ "Tullo",
district == "Masha Town Administration" ~ "Masha town",
district == "Teppi Town Administration" ~ "Tepi", 
district == "Gorigesha" ~ "Gori Gesha",
district == "Menit Goldia" ~ "Menit Goldiye",
district == "Weliso Town" ~ "Woliso town",   
district == "Aroressa" ~ "Aroresa",
district == "Borricha" ~  "Boricha",
district == "Hawassa Zuriya" ~ "Hawassa Zuria",
district == "Wondo Genet Town" ~ "Wondo-Genet town",
district == "Hawella" ~ "Hawela",
district == "Leku Town Administration" ~ "Leku town",
district ==	"Daela" ~ "Daella", 
district == "Dara Otilcho" ~ "Dara Otilicho",
district == "Daye Town Administration" ~ "Daye town",
district == "Wondogenet" ~ "Wondo-Genet", 
district == "Wensho" ~ "Wonosho",
district == "Melga" ~ "Malga",
district == "Gursum (SM)" ~ "Gursum (SM)",
district == "Yirgalem Town Administration" ~ "Yirgalem town", 
district == "Aleta Wondo Town Administration" ~ "Aleta Wondo town",
district == "Hoko" ~ "Hokko",
district == "Hadagala" ~ "Hadhagala",
district == "Hamaro" ~ "Hamero",
district == "Harorays" ~ "Haroreys",
district == "Horashagah" ~ "Horshagah",
district == "Hudhet" ~ "Hudet",
district == "Kadadumo" ~ "Qada Duma",
district == "Kebridahar" ~ "Kebridehar", 
district == "Kebridahar town" ~ "Kebridehar town",
district == "Koran Mula" ~ "Koran /Mulla",
district == "Lasdhankeyre" ~ "Lasdhankayre",
district == "Lehelyuub" ~ "Lehel-Yucub", 
district == "Mayumuluqo" ~ "Meyumuluka", 
district == "babili" ~ "Babile (SM)",
district == "Bare" ~ "Barey",
district == "Bercano" ~ "Berocano",
district == "Bilcilbur" ~ "Bilcil-Bur",
district == "Birqod" ~ "Burqod",
district == "Bodalay" ~ "Bodaley",
district == "Bokolmanyo" ~ "Bokolmayo",
district == "Chareti" ~ "Charati",
district == "Danbal" ~ "Dembel",
district == "Danot" ~ "Danod",
district == "Daroor" ~ "Daror",
district == "Degahbur" ~ "Degehabur",
district == "Degahbur town" ~ "Degahabur town",
district == "Dekasuftu" ~ "Deka Suftu",
district == "Dhagahmadaw" ~ "Degehamedo",
district == "Dhanan" ~ "Danan",
district == "Dhoboweyn" ~ "Debeweyin",
district == "Dollo bay" ~ "Dolobay",
district == "Dolo Ado" ~ "Dolo Odo",
district == "Duhun" ~ "Dihun",
district == "East Imey" ~ "East Imi",
district == "EL-Ogaden" ~ "El-Ogaden",
district == "Elele" ~ "Elale",
district == "Elkari" ~ "Elkare /Serer",
district == "Erer (SI)" ~ "Erer (SM)",
district == "Godey" ~ "Gode",
district == "Maeso" ~ "Miesso",
district == "Godey City" ~ "Godey town",
district == "Gorabaqaqsa" ~ "Goro Baqaqsa",
district == "gota-biki" ~ "Gota-Biki",
district == "Gura Damole" ~ "Guradamole",
district == "Moyale" ~ "Moyale (SM)",
district == "Mubarak" ~ "Mubarek",
district == "Qabribayah" ~ "Kebribeyah",
district == "Qabribayah town" ~ "Kebribayah town",
district == "Qalafo" ~ "Kelafo",
district == "Qooxle" ~ "Kohle /Qoxle",
district == "Shabeley" ~ "Shabeeley",
district == "Shaykosh" ~ "Shaygosh", 
district == "Togwajale town" ~ "Wajale town",
district == "West Imay" ~ "West Imi",
district == "Yahoob" ~ "Yahob",
district == "yocale" ~ "Yocale",
district == "Abi Adi" ~ "Abi Adi town",
district == "Adwa Town" ~ "Adwa town",
district == "Ahferom" ~ "Aheferom",
district == "Alamata"~ "Alamata town",
district == "Asegede Tsimbila" ~ "Asgede",
district == "Axum Town" ~ "Axum town",
district == "Degua Tembien" ~ "Degua Temben",
district == "Erop" ~ "Erob",
district == "Hawzien" ~ "Hawzen",
district == "Hintalo Wajerat" ~ "Hintalo",
district == "Klite Awlaelo" ~ "Kelete Awelallo",
district == "Kola Tembien" ~ "Kola Temben",
district == "Korem" ~ "Korem town",
district == "Lailay Adeyabo" ~ "Laelay Adiabo",
district == "Maichew" ~ "Maichew town",
district == "Saesie Tseada Emba" ~ "Saesie",
district == "Seharti Samre" ~ "Saharti",
district == "Setit Humra" ~ "Setit Humera",
district == "Sheraro" ~ "Sheraro town",
district == "Shire Endasilase" ~ "Indasilassie town",
district == "Tahtay Adyabo" ~ "Tahtay Adiyabo",
district == "Tahtay Maychew" ~ "Tahtay Mayechew",
district == "Tsegede" ~ "Tsegede (TG)",
district == "Welkayit" ~ "Welkait",
district == "Weri Leke" ~ "Werei Leke",
district == "Wukro" ~ "Wukro town",
district == "Rural Adwa" ~ "Adwa", 
district == "Naedier Adet" ~ "Adet",
district == "Tanqua Abergele" ~ "Abergele (TG)",
district == "Medebay Zana" ~ "Zana",
district == "Tahtay Qoraro" ~ "Tahtay Koraro",
district == "Asegede Tsimbila" ~ "Asegede",
district == "Atsbi Wenberta" ~ "Atsbi",
district == "Gulomekeda" ~ "Gulo Mekeda",
district == "Maichew" ~ "Maichew town",
district == "Argoba Special" ~  "Arguba",
district == "Ankasha Guagusa"~ "Ankasha" ,
district == "Dambi Dollo" ~ "Denbi Dollo town",
district == "Dangila Zuria" ~ "Dangila" ,
district == "Alefa" ~ "Alfa"  ,
district == "Akaki Kality" ~ "Akaki - Kalit",
district == "Kolfe" ~ "Kolfe - Keran",
district == "Awbare" ~ "Aw-Bare" ,
district == "Nifas Silk Lafto" ~ "Nefas Silk" ,
district == "West Dembia" ~ "West Dembiya",
district == "Gozamin" ~ "Guzamn",
district == "Machakel" ~ "Michakel",
district == "Shebel Berenta" ~ "Shebel Bernta", 
district == "Sedie" ~ "Sedae" ,
district == "Adigrat" ~ "Adigrat town",
district == "Jile Timuga" ~ "Jilye Tumuga",
district == "Libo Kemkem" ~"Libokemekem"  , 
district == "Ebinat" ~ "Ebenat" ,
district == "Simada" ~ "Semada",
district == "dig" ~ "Dig",
district == "Sekota Zuria" ~"Sekota" , 
district == "Tsagibji" ~"Tsagbeji" ,
district == "Ziquala" ~"Zequala" , 
district == "Bahir Dar Zuria" ~ "Bahirdar Zuria",
district == "Bure Zuria" ~ "Bure (AM)",
district == "Semen Mecha" ~ "Mecha" ,
district == "Gonji Kollela" ~ "Gonje", 
district == "Mao Komo Special" ~ "Maokomo Special" ,
district == "Mandura" ~ "Madira" ,
district == "Pawi" ~ "Pawe",
district == "Bale Gasgar" ~ "Bele Gesgar"  ,
district == "Burayu Town" ~ "Burayu",
district == "Adami Tulu Jido Kombolcha" ~ "Adama Tulu Jido Kombolcha",
district == "Adola rede" ~ "Adola" ,
district == "Adola Town" ~ "Adola town",
district == "Hawassa City Administration" ~ "Hawasa town",
district == "Jardga Jarte" ~ "Jarte Jardega",
district == "Jimma Geneti" ~ "Jimma Genete",
district == "Chora Botor" ~ "Chora (Jimma)",
district == "Mencho" ~ "Mancho" , 
district == "Omo Beyem" ~ "Omo Beyam" ,
district == "Aleta Wondo" ~ "Aleta Wendo" ,
district == "Sheraro" ~ "Sheraro Town", 
district == "Shire Endasilase" ~ "Indasilassie town",
district == "Saesie Tseada Emba" ~ "Saesie",
district == "Hawzien" ~ "Hawzen",
district == "Hintalo Wajerat" ~  "Hintalo",
district == "Seharti Samre" ~ "Saharti" ,
district == "Amaro Special" ~"Amaro"  ,
district == "Basketo Special" ~ "Basketo SP Woreda",
district == "Kamba Zuria" ~ "Kemba",
district == "Kutcha Zuria" ~ "Kucha" ,
district == "Woliso"~ "Waliso", 
district == "Oyida" ~ "O'yida" ,
district == "East Meskan" ~ "Misrak Meskan" , 
district == "South Sodo" ~ "Debub Sodo" ,
district == "Sokoru" ~ "Sekoru" ,
district == "West Badewacho" ~ "Mirab Badowach",
district == "Shebedino" ~  "Shebe Dino",
district == "East Badawacho" ~ "Misrak Badawacho" ,
district == "Adilo Zuria" ~  "Adilo" ,
district == "East Azernet Berbere" ~ "Misrak Azenet Berbere" , 
district == "West Azernet" ~ "Mierab Azenet Berbere" ,
district == "East Silti" ~ "Misirak Silti",
district == "North Bench" ~ "Semen Bench" ,
district == "South Bench" ~ "Debub Bench",
TRUE ~ district)) |> 
 dplyr:: select(-district) |> #drop the old name
  rename("district" = "district_new") #rename to district
```

#### **Null values**

Null values are treated differently in R. They appear as `NA` in the dataset, so we may expect the following code to work for filtering data to remove all missing values for the number of people tested for malaria:

```{r}
filter(routine_data,test_performed !=NA)
```

However, this does not work as R has a special way of dealing with missing values. We use the `is.na()` command, which checks fo \`NA\` values. As with the equals command, if we want the reverse of this, i.e. "not NA" we can use `!is.na()`. So the code to remove missing values would be:

```{r echo=FALSE, eval=FALSE}
filter(routine_data, !is.na(test_performed))
```

Another method for removing missing data in tidyverse is using the `drop_na()` function. As with the filter function this takes the dataset as the first argument, followed by the variables for which you are dropping NA values.

```{r drop_na}
routine_data <- drop_na(routine_data, test_performed)
```

#### Date

For introductory, please see the above example in the data cleaning section. In the `lubridate` package we can use the following functions to get the current date and time.

```{r}
today()

Sys.Date()

now()
```

#### Sorting and reordering data frames

Sorting a data frame by rows and reordering columns is easy in R. To sort a data frame by a column we use the function \`arrange()\`. We specify the data frame and the column to sort by, and the default is to sort in ascending order. To sort in a descending order we can specify this with \`desc()\`. Additionally, we can sort by multiple variables, and sorting will be undertaken in the order they appear in the command.

```{r eval=FALSE, echo=FALSE}
arrange(routine_data, confirmed_u5)

arrange(routine_data, desc(confirmed_u5))

colnames(task_data)

relocate(task_data, district, .before =  Month)
```

#### Summarising data

There are some useful functions in tidyverse to help you summarise the data. The first of these is the `count()` function. This is a quick function which will allow you to quickly count the occurrences of an item within a dataset.

```{r}
count(routine_data, region)
```

By including multiple variables in the command we can count the numbers of times that combination of variables appears.

```{r}
count(routine_data, region, Month)
```

If we want to summarise numerical variables we can use the function `summarise().` This is used in conjunction with other mathematical functions such as `sum()`, `mean()`, `median()`, `max()`..

```{r}
summarise(task_data,

          total_case = sum(female, male, na.rm = TRUE),

          mean_cases = mean(conf_5),

          median_cases = median(conf_5),

          max_cases = max(conf_5),
          sd_case = sd(conf_5))
```

We can combine the `summarise()` function with `group_by()` to summarise the data by different variables in the dataset. To calculate the total number of people tested and positive for malaria in each district in our dataset, we would group by this variable first and then summarise the data. Grouping is not restricted to one variable, if you wanted to group the data by location and date then both variables would be included in the command.

```{r}
routine_data <- group_by(routine_data, region)

summarise(routine_data, 

          total_test = sum(test_performed),

          total_positive = sum(confirmed_all),

          total_u5 = sum(confirmed_u5),

          total_514 = sum(confirmed_5_14),

          total_ov15 = sum(confirmed_15)) 
```

::: callout-important
Task 2: Using the "routine_data" dataset:

-   Select the variables for region, zone, district, test_performed, confirmed_all, confirmed_5\_14 (confirmed cases for the age 5 - 14 years), confirmed_15

-   Identify any errors in year variable and correct them

-   define all rows with `0` *confirmed_all* to `NA` assuming that zero cases are not real zero rather unreported cases.

-   Identify missing values or unrealistic values (e.g confirmed_all cases higher than those tested (test_performed))

-   create 'confirmed_ov5' variable by summing confirmed_5\_14 and confirmed_15

-   Create a separate dateset for 'Amhara' region
:::

#### Pipes

We have introduced some of the key functions for data cleaning and manipulation. However, creating intermediate variables in lots of steps can be cumbersome. In these cases we can use the pipe operator `%>%` for versions 4.1 and more (`|>`) to link commands together. This takes the output of one command and passes it to the next. So if we repeat the above `summarise` function rather than the basic R code we can use the pipe operator to pass the data frame"routine_data" into the mean function. We can use the shortcut `Ctrl+Shift+M` to write the pipe operator.

We can read in our dataset, select the variables we want to keep, filter our dataest, and edit/create variables in one chunk of piped code. Note that as we are using the pipe operator we no longer need to tell each command what data frame is being used.

```{r}
routine_data |> 

 select(region, zone, district,

         test_performed,confirmed_all,confirmed_u5) |> 

         filter(region%in%"Amhara") |> 

  group_by(zone) |> 

  summarise(total_test = sum(test_performed),

          total_positive = sum(confirmed_all),

          total_u5 = sum(confirmed_u5))
```

Additionally, we can link the `group_by()` and `summarise()` functions together to show data summaries.

::: callout-important
Task 3: Using the "am_data" datasets :

-   Using the pipe operator group the data by the *zone* and the year.

-   Create a new data frame called "regional_data" which contains a summary of the data calculating the minimum, maximum and mean number of confirmed malaria cases for each age group.
:::

#### Demo 1

We now want to take everything we have learnt to import and clean the routine dataset. We want our output to contain the total numbers of malaria tests performed and the number of confirmed cases in children under 5, people over 5, and calculate a total for all ages. We want to have the total by district level and Year in the dataset. This is how we would go about building the code.

```{r}
routine_data <- read_csv('~/Part 2/routine_data.csv',
                         na = c(0, "NA", -9999))

clean_routine_data <- routine_data %>% 
dplyr::select(region, zone, district, Month, Year,
         test_performed,confirmed_all,
         confirmed_u5,confirmed_5_14,confirmed_15) %>% 
  drop_na(test_performed,confirmed_all,
         confirmed_u5,confirmed_5_14,confirmed_15) %>% 
  filter(test_performed>confirmed_all) %>% 
  mutate(region = case_when(region =='Sou'~'South Western Ethiopia',
             TRUE~region),
             year = case_when(Year == 3021 ~ 2021,
                          Year == 21 ~ 2021,
                          TRUE ~ Year),
         date_reported = make_date(year = Year,
                                   month = Month), 
         conf_ov5 = confirmed_5_14+confirmed_15) %>%
  group_by(region, zone, district) %>% 
  summarise(test_total = sum(test_performed),
            conf_total = sum(confirmed_all),
            conf_u5 = sum(confirmed_u5),
           conf_ov5 = sum(conf_ov5)) |> 
  dplyr::select(-test_total, -conf_total)
head(clean_routine_data)
```

### Advanced manipulation of data frames

In this section we introducing some more advanced functions for data manipulation. We will be using the "clean_routine_data" dataset we just created.

#### Reshshaping data

Reshaping or pivoting data is an important part of data cleaning and manipulation. Tidyverse has introduced the functions `pivot_wider()` and `pivot_longer()` to improve the ease of reshaping data in R.

`pivot_longer()` takes a wide dataset and converts it into a long one, decreasing the number of columns and increasing the number of rows. Datasets are often created in a wide format, but for analysis a long format is often preferable, especially for data visualisations.

To reshape the data long we need to pass the argument the columns which are being pivoted, a name for the new column to identify the columns being reshaped, and a name for the values of the columns being reshaped. We can also combine this with helper functions such as `starts_with()` to help identify the columns to reshape. For this demonstration we will use the "clean_data_routine.csv". To reshape the dataset into long format :

```{r}
clean_routine_data <- read_csv('~/Part 2/clean_routine_data.csv')


clean_long <- clean_routine_data |> 
pivot_longer(cols = starts_with("conf"),
               names_to = "age_group",
               names_pattern = "conf_(.*)",
               values_to = 'cases') 

```

to convert the 'clean_long' dataset to wide forma:\

```{r eval=FALSE, echo=TRUE}
clean_long |> 
  pivot_wider(id_cols = c('region',
                          'zone',
                          'district'),
              names_from = age_group,
              values_from = cases)
```

There are a range of different options in this function to help pivot the data in the cleanest way possible. To see these you can look at the vignette by typing the code `vignette("pivot")`.

#### Joining data frames

In R we can easily join two data frames together based on one, or multiple variables. There are the following options for joining two data frames, `x`and `y`:

-   `inner_join()`: includes all rows that appear in both x and y

-   `left_join()`: includes all rows in x

-   `right_join()`: includes all rows in y

-   `full_join()`: includes all rows in x or y

To run the command you need to pass it the data frames you wish to join and the variable(s) you wish to join by. If there are matching variables in the data frames these will be detected and you do not need to specify them.

If we have two data frames with varying numbers of rows, we can investigate the outcomes of using the different join commands. Firstly, we create two data frames of different lengths, `tested`, and `confirmed`, then look at what the commands and outcomes would be.

```{r}
tested <- data.frame(year = c(2015, 2016, 2017, 2018, 2019, 2020),

                     tested = c(1981, 1992, 2611, 2433, 2291, 2311))

positive <- data.frame(year = c(2013, 2014, 2015, 2016, 2017, 2018),

                     positive = c(1164, 1391, 981, 871, 1211, 998))

# Command written in full

inner_join(tested, positive, by = "year") 

# Using the pipe operator

tested %>% inner_join(positive)     # Keeps only matching records

 left_join(tested, positive)      # Keeps all records for the first dataset

tested %>% right_join(positive)     # Keeps all records for the second dataset 

tested %>% full_join(positive)    # Keeps all records from both datasets
```

We can also join datasets which have different names for the variables we wish to join on. Say if the variable for "year" in the positive dataset was "yr", we could use the command:

```{r}
positive <- data.frame(yr = c(2013, 2014, 2015, 2016, 2017, 2018),
                     positive = c(1164, 1391, 981, 871, 1211, 998))
tested %>% inner_join(positive,
                      by= c("year"="yr"))
```

#### Writing data

Once you have finished working on your data there are multiple ways you can save your work in R.

One of the basic ones is to save your dataset as a csv. This is useful as it can easily be opened in other software (such as excel). You may also want to save your data as a Stata (dta) file.

R has some specific formats you can use to store data, these are `.RDS` and `.RData`. RDS files store one R object, whilst RData can store multiple objects.

Here, we can select which format we want to save the data in and save the `malaria_incidence_2021` data frame we created in this module.

Similarly to importing data, we can use the base R functions of \`write.csv()\`, or preferably the `tidyverse` option if `write_csv()`.

```{r}
write_csv(clean_routine_data, "clean_routine_data.csv")

write_dta(clean_routine_data, "outputs/clean_routine_data.dta")

saveRDS(clean_routine_data, "outputs/clean_routine_data.RDS")
```

::: callout-important
Task 4:

-   Import a clean version of the "routine_data.csv"

-   Remove NAs from the conf_u5 and conf_ov5 variables

-   Create a new data frame called confirmed_malaria which it the sum of confirmed malaria cases in children under 5 and people over 5 by district

-   Pivot this data into the long format so that there is one variable identifying the age group and one identifying the number of confirmed cases. Call this data frame "confirmed_malaria".

-   Save this data frame as a csv called "confirmed_malaria" in the "outputs" folder
:::

#### Demo 2

In this demo we will link together what we have learnt to create a dataset of the total number of confirmed cases, population and malaria incidence by month, and district. Then another dataset aggergated for the whole country.

```{r}
# Import the population dataset

pop <- read_csv('~/Part 2/population.csv')

case_data <- read_csv('~/Part 2/case_data.csv')

# Confirmed cases and malaria incidence by age group per month for each district location

  malaria_incidence <- left_join(case_data, pop) %>% 
 dplyr:: select(region,district,Year,date,
         starts_with('conf'),
         starts_with('pop') ) %>% 
    convert(num(conf_ov5)) |> 
  pivot_longer(cols = starts_with("conf")|starts_with("pop"),
               names_to = c("metric",
                            "age_group"),
               names_sep = "_",
               values_to = 'value') |> 
  pivot_wider(id_cols = c('region',
                          'district',
                          'date'),
              names_from = c(metric, age_group),
              values_from = value) |> 
  mutate(incidence = conf_total/pop_total*100000)

# Confirmed cases and malaria incidence by age group for the whole country
incidence_national <- read_csv("~/Part 2/incidence_national.csv")

malaria_incidence_national <- incidence_national |> 
  group_by(age_group) %>% 
  summarise(across(c(conf, pop), sum)) %>% 
  mutate(incidence = conf/pop*100000)

write_csv(malaria_incidence, 'data/incidence.csv')
write_csv(clean_routine_data, 'data/clean_routine_data.csv')
```

### Spatial Modeling

```{r}
#install.packages("INLA", repos="https://protect-au.mimecast.com/s/WePPCmOxBAH5Aq0GC3A4pk?domain=inla.r-inla-download.org")
#remotes::install_version("INLA", version="22.05.03",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/testing"), dep=TRUE)
require(INLA)
```

In this section, we will cover spatial modeling using INLA in a Bayesian Frame work, specifically for area data.
